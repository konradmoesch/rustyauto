use std::io::Result;
fn main() -> Result<()> {
    protobuf_codegen::Codegen::new()
        // Use `protoc` parser, optional.
        .protoc()
        // Use `protoc-bin-vendored` bundled protoc command, optional.
        //.protoc_path(&protoc_bin_vendored::protoc_bin_path().unwrap())
        // All inputs and imports from the inputs must reside in `includes` directories.
        .includes(&["src/protos"])
        // Inputs must reside in some of include paths.
        .input("src/protos/ChannelDescriptorData.proto")
        .input("src/protos/ServiceDiscoveryRequestMessage.proto")
        .input("src/protos/ServiceDiscoveryResponseMessage.proto")
        .input("src/protos/SensorChannelData.proto")
        .input("src/protos/AVChannelData.proto")
        .input("src/protos/AVInputChannelData.proto")
        .input("src/protos/BluetoothChannelData.proto")
        .input("src/protos/NavigationChannelData.proto")
        .input("src/protos/MediaChannelData.proto")
        .input("src/protos/VendorExtensionChannelData.proto")
        .input("src/protos/WifiChannelData.proto")
        .input("src/protos/InputChannelData.proto")
        .input("src/protos/SensorData.proto")
        .input("src/protos/NavigationImageOptionsData.proto")
        .input("src/protos/AVStreamTypeEnum.proto")
        .input("src/protos/BluetoothPairingMethodEnum.proto")
        .input("src/protos/AudioTypeEnum.proto")
        .input("src/protos/VideoResolutionEnum.proto")
        .input("src/protos/VideoFPSEnum.proto")
        .input("src/protos/SensorTypeEnum.proto")
        .input("src/protos/AudioConfigData.proto")
        .input("src/protos/TouchConfigData.proto")
        .input("src/protos/VideoConfigData.proto")
        .input("src/protos/AudioFocusRequestMessage.proto")
        .input("src/protos/AudioFocusResponseMessage.proto")
        .input("src/protos/AudioFocusStateEnum.proto")
        .input("src/protos/AudioFocusTypeEnum.proto")
        .input("src/protos/AVChannelMessageIdsEnum.proto")
        .input("src/protos/ChannelOpenRequestMessage.proto")
        .input("src/protos/ChannelOpenResponseMessage.proto")
        .input("src/protos/StatusEnum.proto")
        .input("src/protos/AVChannelSetupRequestMessage.proto")
        .input("src/protos/AVChannelSetupResponseMessage.proto")
        .input("src/protos/AVChannelSetupStatusEnum.proto")
        .input("src/protos/SensorEventIndicationMessage.proto")
        .input("src/protos/GPSLocationData.proto")
        .input("src/protos/CompassData.proto")
        .input("src/protos/SpeedData.proto")
        .input("src/protos/RPMData.proto")
        .input("src/protos/OdometerData.proto")
        .input("src/protos/FuelLevelData.proto")
        .input("src/protos/ParkingBrakeData.proto")
        .input("src/protos/GearData.proto")
        .input("src/protos/GearEnum.proto")
        .input("src/protos/DiagnosticsData.proto")
        .input("src/protos/NightModeData.proto")
        .input("src/protos/EnvironmentData.proto")
        .input("src/protos/HVACData.proto")
        .input("src/protos/DrivingStatusData.proto")
        .input("src/protos/DrivingStatusEnum.proto")
        .input("src/protos/SteeringWheelData.proto")
        .input("src/protos/PassengerData.proto")
        .input("src/protos/DoorData.proto")
        .input("src/protos/LightData.proto")
        .input("src/protos/HeadlightStatusEnum.proto")
        .input("src/protos/IndicatorStatusEnum.proto")
        .input("src/protos/AccelData.proto")
        .input("src/protos/GyroData.proto")
        .input("src/protos/SensorStartRequestMessage.proto")
        .input("src/protos/SensorStartResponseMessage.proto")
        .input("src/protos/BindingRequestMessage.proto")
        .input("src/protos/BindingResponseMessage.proto")
        .input("src/protos/VideoFocusIndicationMessage.proto")
        .input("src/protos/VideoFocusModeEnum.proto")
        // Specify output directory relative to Cargo output directory.
        .cargo_out_dir("protos")
        .run_from_script();
    //prost_build::compile_protos(&["src/protos/ChannelDescriptorData.proto", "src/protos/ServiceDiscoveryRequestMessage.proto","src/protos/ServiceDiscoveryResponseMessage.proto"], &["src/protos/"])?;
    Ok(())
}